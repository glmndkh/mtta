
import { db } from './server/db.js';
import { users, players, tournaments, tournamentParticipants } from './shared/schema.js';

// –ù–∞—Å –∞–Ω–≥–∏–ª–∞–ª—É—É–¥
const ageCategories = [
  { name: '8-10 –Ω–∞—Å', minAge: 8, maxAge: 10, gender: 'male' },
  { name: '11-12 –Ω–∞—Å', minAge: 11, maxAge: 12, gender: 'male' },
  { name: '13-14 –Ω–∞—Å', minAge: 13, maxAge: 14, gender: 'male' },
  { name: '15-16 –Ω–∞—Å', minAge: 15, maxAge: 16, gender: 'male' },
  { name: '17-18 –Ω–∞—Å', minAge: 17, maxAge: 18, gender: 'male' },
  { name: '19+ –Ω–∞—Å', minAge: 19, maxAge: 45, gender: 'male' }
];

// –ú–æ–Ω–≥–æ–ª –Ω—ç—Ä—Å–∏–π–Ω –∂–∞–≥—Å–∞–∞–ª—Ç
const mongolianNames = {
  male: [
    '–ë–∞—Ç–±–∞—è—Ä', '–û—Ç–≥–æ–Ω–±–∞—è—Ä', '–≠–Ω—Ö–±–∞—è—Ä', '–ú”©–Ω—Ö–±–∞—è—Ä', '–¢”©–º”©—Ä–±–∞—è—Ä', '–ê–ª—Ç–∞–Ω–±–∞—è—Ä',
    '–ë—è–º–±–∞—Å“Ø—Ä—ç–Ω', '–¶–∞–≥–∞–∞–Ω—Å—É–≤–¥', '–≠—Ä–¥—ç–Ω—ç–±–∞—Ç', '–ë–∞—è—Ä–º–∞–Ω–¥–∞—Ö', '–ë“Ø—Ö–±–∞—Ç', '–ú–∞–Ω–¥–∞—Ö',
    '–ê–º–∞—Ä—Å–∞–Ω–∞–∞', '–ë”©—Ö–±–∞—è—Ä', '–¶—ç–≤—ç—ç–Ω–∂–∞–≤', '–õ—Ö–∞–≥–≤–∞—Å“Ø—Ä—ç–Ω', '–î–∞–º–¥–∏–Ω—Å“Ø—Ä—ç–Ω', '–¶–æ–≥—Ç–±–∞—è—Ä',
    '–ú”©–Ω—Ö–∂–∞—Ä–≥–∞–ª', '–ë–∞—Ç–º”©–Ω—Ö', '–≠–Ω—Ö—Ç”©—Ä', '–ê–ª—Ç–∞–Ω—Å—É—Ö', '–ì–∞–Ω–±–∞—è—Ä', '–ñ–∞–≤—Ö–ª–∞–Ω',
    '–ü“Ø—Ä—ç–≤–¥–æ—Ä–∂', '–°“Ø—Ö–±–∞—è—Ä', '–ú”©–Ω—Ö—Ç”©—Ä', '–ë–∞—Ç–±–æ–ª–¥', '–≠–Ω—Ö–±–∞—Ç', '–¶—ç–Ω–¥—Å“Ø—Ä—ç–Ω',
    '–ù—è–º—Å“Ø—Ä—ç–Ω', '–ú”©–Ω—Ö–¥–∞–ª–∞–π', '–ë–∞—Ç—Å–∞–π—Ö–∞–Ω', '–≠–Ω—Ö–∂–∞—Ä–≥–∞–ª', '–ê–ª—Ç–∞–Ω—Ç”©–≥—Å', '–ë–æ–ª–¥–±–∞—è—Ä'
  ]
};

const mongolianSurnames = [
  '–î–æ—Ä–∂–ø“Ø—Ä—ç–≤', '–ë–∞—Ç–±–∞—è—Ä', '–ì–∞–Ω—Ç—É–ª–≥–∞', '–¶—ç–Ω–¥—Å“Ø—Ä—ç–Ω', '–õ—Ö–∞–≥–≤–∞—Å“Ø—Ä—ç–Ω', '–ú”©–Ω—Ö–±–∞—Ç',
  '–≠–Ω—Ö–±–∞—è—Ä', '–ê–ª—Ç–∞–Ω—Å—É—Ö', '–ë–∞—Ç–±old', '–¶–∞–≥–∞–∞–Ω', '–ú”©–Ω—Ö–∂–∞—Ä–≥–∞–ª', '–°“Ø—Ö–±–∞—è—Ä',
  '–î–∞–º–¥–∏–Ω—Å“Ø—Ä—ç–Ω', '–ü“Ø—Ä—ç–≤–¥–æ—Ä–∂', '–ë“Ø—Ö–±–∞—è—Ä', '–ù—è–º–¥–∞–≤–∞–∞', '–¶—ç–≤—ç—ç–Ω', '–ñ–∞–≤—Ö–ª–∞–Ω',
  '–ú”©–Ω—Ö–¥–∞–ª–∞–π', '–≠–Ω—Ö—Ç”©—Ä', '–ê–ª—Ç–∞–Ω–±–∞—è—Ä', '–ë–æ–ª–¥—Å–∞–π—Ö–∞–Ω', '–¶–æ–≥—Ç–±–∞—è—Ä', '–ú–∞–Ω–¥–∞—Ö',
  '–ë—è–º–±–∞—Å“Ø—Ä—ç–Ω', '–¶–∞–≥–∞–∞–Ω—Å—É–≤–¥', '–≠—Ä–¥—ç–Ω—ç–±–∞—Ç', '–ë–∞—è—Ä–º–∞–Ω–¥–∞—Ö', '–ë–∞—Ç—Å–∞–π—Ö–∞–Ω', '–¢“Ø–≤—à–∏–Ω',
  '–û—á–∏—Ä–±–∞—Ç', '–ú”©–Ω—Ö–±–∞—è—Ä', '–≠–Ω—Ö–±–∞—Ç', '–ê–ª—Ç–∞–Ω—Ç”©–≥—Å', '–¶—ç–Ω–¥–±–∞—è—Ä', '–ì–∞–Ω–±–∞—è—Ä'
];

function getRandomName() {
  const firstName = mongolianNames.male[Math.floor(Math.random() * mongolianNames.male.length)];
  const lastName = mongolianSurnames[Math.floor(Math.random() * mongolianSurnames.length)];
  return { firstName, lastName };
}

function getRandomBirthDate(minAge, maxAge) {
  const currentYear = new Date().getFullYear();
  const birthYear = currentYear - Math.floor(Math.random() * (maxAge - minAge + 1)) - minAge;
  const month = Math.floor(Math.random() * 12) + 1;
  const day = Math.floor(Math.random() * 28) + 1;
  return new Date(birthYear, month - 1, day);
}

async function createTournamentWithParticipants() {
  console.log('Galmandakh Burmaa —Ç—ç–º—Ü—ç—ç–Ω “Ø“Ø—Å–≥—ç–∂ –±–∞–π–Ω–∞...');

  // –¢—ç–º—Ü—ç—ç–Ω “Ø“Ø—Å–≥—ç—Ö
  const tournamentId = `galmandakh-tournament-${Date.now()}`;
  const tournament = {
    id: tournamentId,
    name: 'Galmandakh Burmaa',
    description: 'Galmandakh Burmaa –Ω—ç—Ä—ç–º–∂–∏—Ç —Ç—ç–º—Ü—ç—ç–Ω',
    startDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000), // 7 —Ö–æ–Ω–æ–≥–∏–π–Ω –¥–∞—Ä–∞–∞
    endDate: new Date(Date.now() + 9 * 24 * 60 * 60 * 1000), // 9 —Ö–æ–Ω–æ–≥–∏–π–Ω –¥–∞—Ä–∞–∞
    registrationDeadline: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000), // 5 —Ö–æ–Ω–æ–≥–∏–π–Ω –¥–∞—Ä–∞–∞
    location: '–£–ª–∞–∞–Ω–±–∞–∞—Ç–∞—Ä —Ö–æ—Ç',
    organizer: '–ú–®–¢–•',
    maxParticipants: 100,
    entryFee: '0',
    status: 'registration',
    participationTypes: ageCategories.map(cat => 
      JSON.stringify({ minAge: cat.minAge, maxAge: cat.maxAge, gender: cat.gender })
    ),
    rules: 'ITTF –¥“Ø—Ä—ç–º',
    prizes: '–ú–µ–¥–∞–ª—å, —Ü–æ–º',
    contactInfo: 'contact@mtta.mn',
    schedule: null,
    requirements: null,
    isPublished: true,
    organizerId: '120ec006-ec32-4bd7-ba9a-14edc8e16e0e', // Admin user ID
    clubId: null,
    backgroundImageUrl: null,
    regulationDocumentUrl: null,
    createdAt: new Date(),
    updatedAt: new Date()
  };

  try {
    await db.insert(tournaments).values(tournament);
    console.log(`–¢—ç–º—Ü—ç—ç–Ω “Ø“Ø—Å–≥—ç–≥–¥–ª—ç—ç: ${tournament.name}`);
  } catch (error) {
    console.log('–¢—ç–º—Ü—ç—ç–Ω –∞–ª—å —Ö—ç–¥–∏–π–Ω “Ø“Ø—Å—Å—ç–Ω –±–∞–π–∂ –º–∞–≥–∞–¥–≥“Ø–π');
  }

  // –ù–∞—Å –∞–Ω–≥–∏–ª–∞–ª –±“Ø—Ä—Ç 6 —Ç–æ–≥–ª–æ–≥—á “Ø“Ø—Å–≥—ç—Ö
  let totalParticipants = 0;
  
  for (const category of ageCategories) {
    console.log(`${category.name} –∞–Ω–≥–∏–ª–∞–ª–¥ —Ç–æ–≥–ª–æ–≥—á–∏–¥ “Ø“Ø—Å–≥—ç–∂ –±–∞–π–Ω–∞...`);
    
    for (let i = 1; i <= 6; i++) {
      const { firstName, lastName } = getRandomName();
      const birthDate = getRandomBirthDate(category.minAge, category.maxAge);
      
      const userId = `galmandakh-user-${category.minAge}-${category.maxAge}-${i}`;
      const playerId = `galmandakh-player-${category.minAge}-${category.maxAge}-${i}`;
      const participantId = `galmandakh-participant-${category.minAge}-${category.maxAge}-${i}`;
      
      // –•—ç—Ä—ç–≥–ª—ç–≥—á “Ø“Ø—Å–≥—ç—Ö
      const user = {
        id: userId,
        email: `${firstName.toLowerCase()}.${lastName.toLowerCase()}${i}@demo.mn`,
        phone: `+976-${Math.floor(Math.random() * 90000000) + 10000000}`,
        password: '123456',
        firstName: firstName,
        lastName: lastName,
        gender: category.gender,
        dateOfBirth: birthDate,
        clubAffiliation: `–ö–ª—É–± ${Math.floor(Math.random() * 10) + 1}`,
        role: 'player',
        createdAt: new Date(),
        updatedAt: new Date()
      };

      // –¢–æ–≥–ª–æ–≥—á “Ø“Ø—Å–≥—ç—Ö
      const player = {
        id: playerId,
        userId: userId,
        memberNumber: `MTTA2025${String(totalParticipants + 1).padStart(3, '0')}`,
        rank: ['3-—Ä –∑—ç—Ä—ç–≥', '2-—Ä –∑—ç—Ä—ç–≥', '1-—Ä –∑—ç—Ä—ç–≥'][Math.floor(Math.random() * 3)],
        points: Math.floor(Math.random() * 1000) + 500,
        achievements: null,
        dateOfBirth: birthDate,
        wins: Math.floor(Math.random() * 20) + 5,
        losses: Math.floor(Math.random() * 10) + 2,
        winPercentage: Math.floor(Math.random() * 30) + 60,
        createdAt: new Date()
      };

      // –¢—ç–º—Ü—ç—ç–Ω–¥ –±“Ø—Ä—Ç–≥—ç—Ö
      const participant = {
        id: participantId,
        tournamentId: tournamentId,
        playerId: playerId,
        participationType: JSON.stringify({ 
          minAge: category.minAge, 
          maxAge: category.maxAge, 
          gender: category.gender 
        }),
        registeredAt: new Date(),
        status: 'registered'
      };

      try {
        await db.insert(users).values(user).onConflictDoNothing();
        await db.insert(players).values(player).onConflictDoNothing();
        await db.insert(tournamentParticipants).values(participant).onConflictDoNothing();
        
        console.log(`  ‚úì ${firstName} ${lastName} (${category.minAge}-${category.maxAge} –Ω–∞—Å)`);
        totalParticipants++;
      } catch (error) {
        console.log(`  ‚úó –ê–ª–¥–∞–∞: ${firstName} ${lastName} - ${error.message}`);
      }
    }
  }

  console.log(`\nüéâ –ê–º–∂–∏–ª—Ç—Ç–∞–π –¥—É—É—Å–ª–∞–∞!`);
  console.log(`üìä –ù–∏–π—Ç “Ø“Ø—Å–≥—ç—Å—ç–Ω —Ç–æ–≥–ª–æ–≥—á–∏–¥: ${totalParticipants}`);
  console.log(`üèÜ –¢—ç–º—Ü—ç—ç–Ω–∏–π –Ω—ç—Ä: ${tournament.name}`);
  console.log(`üÜî –¢—ç–º—Ü—ç—ç–Ω–∏–π ID: ${tournamentId}`);
  console.log(`\n–¢—ç–º—Ü—ç—ç–Ω–∏–π–≥ —Ö–∞—Ä–∞—Ö—ã–Ω —Ç—É–ª–¥: http://localhost:5000/tournaments/${tournamentId}`);
}

// –°–∫—Ä–∏–ø—Ç –∞–∂–∏–ª–ª—É—É–ª–∞—Ö
createTournamentWithParticipants().catch(console.error);
