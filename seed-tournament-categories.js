
import { db } from './server/db.ts';
import { users, players, tournamentParticipants } from './shared/schema.ts';

const tournamentId = '4f1651de-eb33-4bb0-987f-b8d162ace245';

// 16 demo —Ç–∞–º–∏—Ä—á–∏–Ω - –±“Ø–≥–¥–∏–π–≥ 20-40 –Ω–∞—Å–Ω—ã –∞–Ω–≥–∏–ª–∞–ª–¥ –æ—Ä—É—É–ª–∞—Ö
const demoUsers = [];
const demoPlayers = [];
const demoParticipants = [];

// –≠—Ä—ç–≥—Ç—ç–π —Ç–∞–º–∏—Ä—á–∏–¥ (8 —Ö“Ø–Ω) - 20-40 –Ω–∞—Å
const maleNames = [
  ['–ë–æ–ª–¥', '–ë–∞—Ç–±–∞—è—Ä'], ['–¢”©–º”©—Ä', '–¢“Ø–º—ç–Ω–±–∞—è—Ä'], ['–¶–∞–≥–∞–∞–Ω', '–î–∞—à–Ω—è–º'], ['–ê–ª—Ç–∞–Ω', '–¶–æ–≥—Ç–±–∞—è—Ä'],
  ['–≠–Ω—Ö', '–ê–º–≥–∞–ª–∞–Ω'], ['–ú”©–Ω—Ö', '–î—ç–ª–≥—ç—Ä'], ['–ë–∞—è—Ä', '–°–∞–π—Ö–∞–Ω'], ['–ì–∞–Ω–±–∞—Ç', '–ó–æ—Ä–∏–≥']
];

for (let i = 0; i < 8; i++) {
  const [lastName, firstName] = maleNames[i];
  const age = Math.floor(Math.random() * 21) + 20; // 20-40 –Ω–∞—Å
  const birthYear = new Date().getFullYear() - age;
  const birthMonth = Math.floor(Math.random() * 12) + 1;
  const birthDay = Math.floor(Math.random() * 28) + 1;
  
  const userId = `demo-user-male-${i + 1}`;
  const playerId = `demo-player-male-${i + 1}`;

  demoUsers.push({
    id: userId,
    firstName,
    lastName,
    gender: 'male',
    email: `${firstName.toLowerCase()}.${lastName.toLowerCase()}@demo.mn`,
    dateOfBirth: new Date(birthYear, birthMonth - 1, birthDay),
    phone: `9999${String(i + 10).padStart(4, '0')}`,
    createdAt: new Date(),
    updatedAt: new Date()
  });

  demoPlayers.push({
    id: playerId,
    userId,
    clubAffiliation: i % 2 === 0 ? 'demo-club-1' : 'demo-club-2',
    registrationNumber: `2025${String(i + 10).padStart(3, '0')}`,
    rank: i < 2 ? '1-—Ä –∑—ç—Ä—ç–≥' : i < 4 ? '2-—Ä –∑—ç—Ä—ç–≥' : '3-—Ä –∑—ç—Ä—ç–≥',
    points: Math.floor(Math.random() * 500) + 800,
    achievements: i < 2 ? '–ö–ª—É–±—ã–Ω –∞–≤–∞—Ä–≥–∞' : null,
    dateOfBirth: new Date(birthYear, birthMonth - 1, birthDay),
    wins: Math.floor(Math.random() * 20) + 10,
    losses: Math.floor(Math.random() * 10) + 3,
    winPercentage: Math.floor(Math.random() * 30) + 65,
    createdAt: new Date()
  });

  // 20-40 –Ω–∞—Å–Ω—ã —ç—Ä—ç–≥—Ç—ç–π –∞–Ω–≥–∏–ª–∞–ª
  const participationType = JSON.stringify({ minAge: 20, maxAge: 40, gender: 'male' });

  demoParticipants.push({
    id: `demo-participant-male-${i + 1}`,
    tournamentId,
    playerId,
    participationType,
    registeredAt: new Date(),
    status: 'registered'
  });
}

// –≠–º—ç–≥—Ç—ç–π —Ç–∞–º–∏—Ä—á–∏–¥ (8 —Ö“Ø–Ω) - 20-40 –Ω–∞—Å
const femaleNames = [
  ['–°–∞–π—Ö–∞–Ω', '–¶—ç—Ü—ç–≥'], ['–ê–ª—Ç–∞–Ω', '–ì—ç—Ä—ç–ª'], ['–û—é—É–Ω', '–ß–∏–º—ç–≥'], ['–ù–æ–º–∏–Ω', '–≠—Ä–¥—ç–Ω—ç'],
  ['–≠–Ω—Ö', '–¢—É—è–∞'], ['–ú”©–Ω—Ö', '–°—ç—Ü—ç–Ω'], ['–ë–∞—è—Ä', '–ú–∞–Ω–¥–∞—Ö'], ['–¶—ç–Ω–¥', '–û—é—É–Ω–∞–∞']
];

for (let i = 0; i < 8; i++) {
  const [lastName, firstName] = femaleNames[i];
  const age = Math.floor(Math.random() * 21) + 20; // 20-40 –Ω–∞—Å
  const birthYear = new Date().getFullYear() - age;
  const birthMonth = Math.floor(Math.random() * 12) + 1;
  const birthDay = Math.floor(Math.random() * 28) + 1;
  
  const userId = `demo-user-female-${i + 1}`;
  const playerId = `demo-player-female-${i + 1}`;

  demoUsers.push({
    id: userId,
    firstName,
    lastName,
    gender: 'female',
    email: `${firstName.toLowerCase()}.${lastName.toLowerCase()}@demo.mn`,
    dateOfBirth: new Date(birthYear, birthMonth - 1, birthDay),
    phone: `9999${String(i + 20).padStart(4, '0')}`,
    createdAt: new Date(),
    updatedAt: new Date()
  });

  demoPlayers.push({
    id: playerId,
    userId,
    clubAffiliation: i % 2 === 0 ? 'demo-club-1' : 'demo-club-2',
    registrationNumber: `2025${String(i + 20).padStart(3, '0')}`,
    rank: i < 2 ? '1-—Ä –∑—ç—Ä—ç–≥' : i < 4 ? '2-—Ä –∑—ç—Ä—ç–≥' : '3-—Ä –∑—ç—Ä—ç–≥',
    points: Math.floor(Math.random() * 400) + 700,
    achievements: i < 2 ? '–ö–ª—É–±—ã–Ω –∞–≤–∞—Ä–≥–∞' : null,
    dateOfBirth: new Date(birthYear, birthMonth - 1, birthDay),
    wins: Math.floor(Math.random() * 18) + 8,
    losses: Math.floor(Math.random() * 8) + 2,
    winPercentage: Math.floor(Math.random() * 25) + 60,
    createdAt: new Date()
  });

  // 20-40 –Ω–∞—Å–Ω—ã —ç–º—ç–≥—Ç—ç–π –∞–Ω–≥–∏–ª–∞–ª
  const participationType = JSON.stringify({ minAge: 20, maxAge: 40, gender: 'female' });

  demoParticipants.push({
    id: `demo-participant-female-${i + 1}`,
    tournamentId,
    playerId,
    participationType,
    registeredAt: new Date(),
    status: 'registered'
  });
}

async function seedTournamentCategories() {
  try {
    console.log(`–¢—ç–º—Ü—ç—ç–Ω ${tournamentId}-–¥ 20-40 –Ω–∞—Å–Ω—ã –∞–Ω–≥–∏–ª–∞–ª –±–∞ 16 —Ç–∞–º–∏—Ä—á–∏–Ω –Ω—ç–º–∂ –±–∞–π–Ω–∞...`);

    // –•—ç—Ä—ç–≥–ª—ç–≥—á–∏–¥ “Ø“Ø—Å–≥—ç—Ö
    console.log('16 demo —Ö—ç—Ä—ç–≥–ª—ç–≥—á–∏–¥ “Ø“Ø—Å–≥—ç–∂ –±–∞–π–Ω–∞...');
    for (const user of demoUsers) {
      await db.insert(users).values(user).onConflictDoNothing();
    }

    // –¢–æ–≥–ª–æ–≥—á–∏–¥ “Ø“Ø—Å–≥—ç—Ö
    console.log('16 demo —Ç–æ–≥–ª–æ–≥—á–∏–¥ “Ø“Ø—Å–≥—ç–∂ –±–∞–π–Ω–∞...');
    for (const player of demoPlayers) {
      await db.insert(players).values(player).onConflictDoNothing();
    }

    // –û—Ä–æ–ª—Ü–æ–≥—á–∏–¥ –±“Ø—Ä—Ç–≥—ç—Ö
    console.log('16 –æ—Ä–æ–ª—Ü–æ–≥—á–∏–¥ —Ç—ç–º—Ü—ç—ç–Ω–¥ –±“Ø—Ä—Ç–≥—ç–∂ –±–∞–π–Ω–∞...');
    for (const participant of demoParticipants) {
      await db.insert(tournamentParticipants).values(participant).onConflictDoNothing();
    }

    console.log('‚úÖ –ê–º–∂–∏–ª—Ç—Ç–∞–π –¥—É—É—Å–ª–∞–∞!');
    console.log('–¢—ç–º—Ü—ç—ç–Ω–∏–π ID:', tournamentId);
    console.log('–ù–∏–π—Ç –æ—Ä–æ–ª—Ü–æ–≥—á–∏–¥:', demoParticipants.length);
    
    console.log('\nüìä –ù–∞—Å–Ω—ã –∞–Ω–≥–∏–ª–∞–ª:');
    console.log('20-40 –Ω–∞—Å —ç—Ä—ç–≥—Ç—ç–π: 8 —Ç–∞–º–∏—Ä—á–∏–Ω');
    console.log('20-40 –Ω–∞—Å —ç–º—ç–≥—Ç—ç–π: 8 —Ç–∞–º–∏—Ä—á–∏–Ω');
    
  } catch (error) {
    console.error('‚ùå –ê–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞:', error);
  } finally {
    process.exit(0);
  }
}

// Script –∞–∂–∏–ª–ª—É—É–ª–∞—Ö
seedTournamentCategories();
