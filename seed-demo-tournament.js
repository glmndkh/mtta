
const { db } = require('./server/db.ts');
const { users, players, tournaments, tournamentParticipants, tournamentResults } = require('./shared/schema.ts');
const { demoTournament, demoParticipants, demoUsers, demoPlayers, demoTournamentResults } = require('./demo-tournament-seed.js');

async function seedDemoTournament() {
  try {
    console.log('Demo —Ç—ç–º—Ü—ç—ç–Ω “Ø“Ø—Å–≥—ç–∂ –±–∞–π–Ω–∞...');

    // Insert demo users
    console.log('Demo —Ö—ç—Ä—ç–≥–ª—ç–≥—á–∏–¥ “Ø“Ø—Å–≥—ç–∂ –±–∞–π–Ω–∞...');
    for (const user of demoUsers) {
      await db.insert(users).values(user).onConflictDoNothing();
    }

    // Insert demo players  
    console.log('Demo —Ç–æ–≥–ª–æ–≥—á–∏–¥ “Ø“Ø—Å–≥—ç–∂ –±–∞–π–Ω–∞...');
    for (const player of demoPlayers) {
      await db.insert(players).values(player).onConflictDoNothing();
    }

    // Insert demo tournament
    console.log('Demo —Ç—ç–º—Ü—ç—ç–Ω “Ø“Ø—Å–≥—ç–∂ –±–∞–π–Ω–∞...');
    await db.insert(tournaments).values(demoTournament).onConflictDoNothing();

    // Insert demo participants
    console.log('Demo –æ—Ä–æ–ª—Ü–æ–≥—á–∏–¥ –±“Ø—Ä—Ç–≥—ç–∂ –±–∞–π–Ω–∞...');
    for (const participant of demoParticipants) {
      await db.insert(tournamentParticipants).values(participant).onConflictDoNothing();
    }

    // Insert demo tournament results
    console.log('Demo —Ç—ç–º—Ü—ç—ç–Ω–∏–π “Ø—Ä –¥“Ø–Ω –æ—Ä—É—É–ª–∂ –±–∞–π–Ω–∞...');
    await db.insert(tournamentResults).values(demoTournamentResults).onConflictDoNothing();

    console.log('‚úÖ Demo —Ç—ç–º—Ü—ç—ç–Ω –∞–º–∂–∏–ª—Ç—Ç–∞–π “Ø“Ø—Å–≥—ç–≥–¥–ª—ç—ç!');
    console.log('–¢—ç–º—Ü—ç—ç–Ω–∏–π –Ω—ç—Ä:', demoTournament.name);
    console.log('–¢—ç–º—Ü—ç—ç–Ω–∏–π ID:', demoTournament.id);
    console.log('–û—Ä–æ–ª—Ü–æ–≥—á–¥—ã–Ω —Ç–æ–æ:', demoParticipants.length);
    console.log('');
    console.log('üåê –¢–∞ –¥–∞—Ä–∞–∞—Ö —Ö–æ–ª–±–æ–æ—Å–æ–æ—Ä —Ç—ç–º—Ü—ç—ç–Ω–∏–π–≥ “Ø–∑—ç–∂ –±–æ–ª–Ω–æ:');
    console.log(`/tournaments/${demoTournament.id}`);
    console.log(`/tournaments/${demoTournament.id}/results`);

  } catch (error) {
    console.error('‚ùå Demo —Ç—ç–º—Ü—ç—ç–Ω “Ø“Ø—Å–≥—ç—Ö—ç–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞:', error);
  }
}

// Run the seeding function
seedDemoTournament();
