import { useState } from "react";
import { useRoute, useLocation } from "wouter";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { ArrowLeft, Save, FileText, Grid3x3 } from "lucide-react";
import { useAuth } from "@/hooks/useAuth";
import { useToast } from "@/hooks/use-toast";
import { DocumentEditor } from "@/components/DocumentEditorSimple";
import { SpreadsheetGrid } from "@/components/SpreadsheetGrid";

export default function AdminTournamentResultsPage() {
  const [match, params] = useRoute("/admin/tournament/:id/results");
  const [, setLocation] = useLocation();
  const { isAuthenticated, user } = useAuth();
  const { toast } = useToast();

  // State for document editor and spreadsheet
  const [documentContent, setDocumentContent] = useState<string>('');
  const [knockoutGridData, setKnockoutGridData] = useState<any[][]>([]);

  const tournamentId = params?.id;

  // Redirect if not authenticated or not admin
  if (!isAuthenticated || user?.role !== 'admin') {
    setLocation('/');
    return null;
  }

  const handleSave = async () => {
    try {
      // Save both document and spreadsheet data
      const data = {
        tournamentId,
        documentContent,
        knockoutGridData
      };
      
      // You can add API call here to save the data
      console.log('Saving data:', data);
      
      toast({
        title: "–ê–º–∂–∏–ª—Ç—Ç–∞–π —Ö–∞–¥–≥–∞–ª–∞–≥–¥–ª–∞–∞",
        description: "–ë–∞—Ä–∏–º—Ç –±–æ–ª–æ–Ω —Ö“Ø—Å–Ω—ç–≥—Ç —Ö–∞–¥–≥–∞–ª–∞–≥–¥–ª–∞–∞",
      });
    } catch (error) {
      toast({
        title: "–ê–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞",
        description: "–•–∞–¥–≥–∞–ª–∞—Ö–∞–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞",
        variant: "destructive",
      });
    }
  };

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <div className="bg-white border-b">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <Button
                variant="ghost"
                onClick={() => setLocation('/admin/tournaments')}
                className="p-2"
              >
                <ArrowLeft className="w-5 h-5" />
              </Button>
              <div>
                <h1 className="text-2xl font-bold text-gray-900">
                  –ë–∞—Ä–∏–º—Ç –∑–∞—Å–≤–∞—Ä–ª–∞–≥—á - –¢—ç–º—Ü—ç—ç–Ω–∏–π “Ø—Ä –¥“Ø–Ω
                </h1>
                <p className="text-gray-600">
                  Word –±–æ–ª–æ–Ω Excel —à–∏–≥ –∑–∞—Å–≤–∞—Ä–ª–∞—Ö –±–æ–ª–æ–º–∂—Ç–æ–π
                </p>
              </div>
            </div>
            <Button onClick={handleSave} className="flex items-center gap-2">
              <Save className="w-4 h-4" />
              –•–∞–¥–≥–∞–ª–∞—Ö
            </Button>
          </div>
        </div>
      </div>

      {/* Main Content */}
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <Tabs defaultValue="document" className="space-y-6">
          <TabsList className="grid w-full grid-cols-3">
            <TabsTrigger value="document" className="flex items-center gap-2">
              <FileText className="w-4 h-4" />
              –ë–∞—Ä–∏–º—Ç –∑–∞—Å–≤–∞—Ä–ª–∞—Ö (Word —à–∏–≥)
            </TabsTrigger>
            <TabsTrigger value="spreadsheet" className="flex items-center gap-2">
              <Grid3x3 className="w-4 h-4" />
              Excel —Ö“Ø—Å–Ω—ç–≥—Ç
            </TabsTrigger>
            <TabsTrigger value="preview">
              –£—Ä—å–¥—á–∏–ª–∞–Ω “Ø–∑—ç—Ö
            </TabsTrigger>
          </TabsList>

          {/* Document Editor Tab */}
          <TabsContent value="document">
            <Card>
              <CardHeader>
                <CardTitle>–ë–∞—Ä–∏–º—Ç –±–∏—á–≥–∏–π–Ω –∑–∞—Å–≤–∞—Ä–ª–∞–≥—á</CardTitle>
                <CardDescription>
                  Word —à–∏–≥ —Ç–µ–∫—Å—Ç, –∑—É—Ä–∞–≥, —Ö“Ø—Å–Ω—ç–≥—Ç —á”©–ª”©”©—Ç—ç–π –Ω—ç–º–∂ –∑–∞—Å–≤–∞—Ä–ª–∞–Ω–∞ —É—É. 
                  –ó—É—Ä–≥–∏–π–≥ URL-–∞–∞—Ä –Ω—ç–º—ç—Ö –±–æ–ª–æ–º–∂—Ç–æ–π.
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="border rounded-lg">
                  <DocumentEditor
                    content={documentContent}
                    onChange={setDocumentContent}
                    placeholder="–≠–Ω–¥ —Ç–µ–∫—Å—Ç –±–∏—á–∏–∂, –∑—É—Ä–∞–≥, —Ö“Ø—Å–Ω—ç–≥—Ç –Ω—ç–º–Ω—ç “Ø“Ø. Toolbar-–æ–æ—Å —Ñ–æ—Ä–º–∞—Ç–ª–∞—Ö –±–æ–ª–æ–º–∂—Ç–æ–π..."
                  />
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          {/* Spreadsheet Tab */}
          <TabsContent value="spreadsheet">
            <Card>
              <CardHeader>
                <CardTitle>Excel –º–∞—è–≥–∏–π–Ω —Ö“Ø—Å–Ω—ç–≥—Ç</CardTitle>
                <CardDescription>
                  Excel —à–∏–≥ –º”©—Ä, –±–∞–≥–∞–Ω–∞ —á”©–ª”©”©—Ç—ç–π –Ω—ç–º–∂ –∑–∞—Å–≤–∞—Ä–ª–∞–Ω–∞ —É—É. 
                  Cells –¥—ç—ç—Ä –¥–∞—Ä–∂ —Ñ–æ—Ä–º–∞—Ç–ª–∞—Ö –±–æ–ª–æ–º–∂—Ç–æ–π.
                </CardDescription>
              </CardHeader>
              <CardContent>
                <SpreadsheetGrid
                  initialRows={12}
                  initialCols={8}
                  data={knockoutGridData}
                  onChange={setKnockoutGridData}
                />
              </CardContent>
            </Card>
          </TabsContent>

          {/* Preview Tab */}
          <TabsContent value="preview">
            <Card>
              <CardHeader>
                <CardTitle>–£—Ä—å–¥—á–∏–ª–∞–Ω “Ø–∑—ç—Ö</CardTitle>
                <CardDescription>
                  –ë–∞—Ä–∏–º—Ç –±–æ–ª–æ–Ω —Ö“Ø—Å–Ω—ç–≥—Ç–∏–π–Ω —ç—Ü—Å–∏–π–Ω –¥“Ø—Ä —Ç”©—Ä—Ö
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-8">
                  {/* Document Preview */}
                  {documentContent && (
                    <div className="border rounded-lg p-6 bg-white">
                      <h3 className="text-lg font-semibold mb-4 pb-2 border-b">
                        üìÑ –ë–∞—Ä–∏–º—Ç –±–∏—á–∏–≥
                      </h3>
                      <div 
                        className="prose prose-sm max-w-none"
                        dangerouslySetInnerHTML={{ __html: documentContent }}
                      />
                    </div>
                  )}
                  
                  {/* Grid Preview */}
                  {knockoutGridData.length > 0 && (
                    <div className="border rounded-lg p-6 bg-white overflow-auto">
                      <h3 className="text-lg font-semibold mb-4 pb-2 border-b">
                        üìä Excel —Ö“Ø—Å–Ω—ç–≥—Ç
                      </h3>
                      <table className="w-full border-collapse border border-gray-300">
                        <tbody>
                          {knockoutGridData.map((row, rowIndex) => (
                            <tr key={rowIndex}>
                              {row.map((cell, colIndex) => (
                                <td 
                                  key={colIndex}
                                  className="border border-gray-300 p-2 min-w-[100px]"
                                  style={{
                                    fontWeight: cell.style?.bold ? 'bold' : 'normal',
                                    fontStyle: cell.style?.italic ? 'italic' : 'normal',
                                    textAlign: cell.style?.textAlign || 'left',
                                    backgroundColor: cell.style?.backgroundColor || 'white'
                                  }}
                                >
                                  {cell.value}
                                </td>
                              ))}
                            </tr>
                          ))}
                        </tbody>
                      </table>
                    </div>
                  )}

                  {/* Empty State */}
                  {!documentContent && knockoutGridData.length === 0 && (
                    <div className="text-center py-12 text-gray-500">
                      <div className="text-6xl mb-4">üìù</div>
                      <h3 className="text-lg font-medium mb-2">–ê–≥—É—É–ª–≥–∞ –±–∞–π—Ö–≥“Ø–π</h3>
                      <p>
                        –î—ç—ç—Ä—Ö —Ç–∞–±—É—É–¥–∞–∞—Å –±–∞—Ä–∏–º—Ç —ç—Å–≤—ç–ª —Ö“Ø—Å–Ω—ç–≥—Ç “Ø“Ø—Å–≥—ç–Ω—ç “Ø“Ø
                      </p>
                    </div>
                  )}
                </div>
              </CardContent>
            </Card>
          </TabsContent>
        </Tabs>
      </div>
    </div>
  );
}